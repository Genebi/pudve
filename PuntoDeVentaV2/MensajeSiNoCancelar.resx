<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAOwAAADsAXkocb0AAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAADl0lEQVRYR+2WWUhVURSG1z3n6k2b08zmWYUbZWWhTZYgZRpBQb01Uj01UT2UDQ+JPWY0U0FBEdlI
        0aBIVlQ0PNVrA0GFkkoEUXmv567+tfdRj8djWV59qR8+7nbvtde/zz577SP9VwcUB+baSLtLNcNvUh1+
        WUC7Fr/TZaAr1EfMC6aR9bqU+NUF4vwssuwF9dEhnauSvj0p9Okmcei+pvYWcUIvChkGldgxnaY0w0cN
        R7c1mzdyZCuxD2OICerQTpDfT2XBURT6Xtl6AT/QN34MhWL8VGmHR10FgCsOaMOqG8SXijTVaEvfvUPY
        BX0w89WMKCo2NobeLJ5NDWJUg3c+oJ+hKkBITjC47rZexKJsshD7Dv0BmRgtbcXWNsiJb3xS9HHq7MUK
        aUufjL29SByIUWdhi0yMhpJQYl8Ll2sD4dlJvYCU7EUKaT8/1TwusaZJ39CfLAk6JJTWyaS+FPpc1mwg
        O4EhHj2tAOSrttwJjeNfyuW1UMjEXJWkA0pHaVlndjYnF+QMYIxHTMlVSFvuAmfM6UJVlhGMZUiivxLe
        +8OMNArX32uZXP7GzvDQ9GwwS7W9YjKDFEaOJ0iF4vhzLcUT8GP7cLnp1cPgQcFMRW+0vWKenmjahSU6
        ZfsVFx+g6hWZxNbZ1omFYckmD0iZBCby8IGmZ4ywLA9l6acq5IzXqdunPd0DFPlYTMyHiRvsi8bJhLEG
        J44MKtJTvHdAeH+NOL4bhZFzt079ew3BikP7FmpzxVHisKMKhILpPu7Rr79C2s4xN3vXoCwNqkfu4dri
        F8ItVjoykSLfSxwLEI63XMSjY8SDkwzFY4w5Dd18rUDFJKMsTTpv27SpLLnLr6x1mTsXcUcnlQ9S2X7i
        cixUPkRuUzcX8c1AfjmQM5WThwy895c5qR7GTo6gxHDd5k71qfoXcjJ87VpEzmQKY4dfipcYurUK74lf
        7PAwdVG5yb6IpubyqKw81b570NvUyYsz6v6wEL9SDJ3y4emr1s3wNnRzd6NewJAJM9VlJO37bdwXbtbM
        p0hcgD6Ipxg3KglwxQZvQzcWzOakmspYyBtncAT9EXyQrPMo28vgKrgOrqAP3wnrHObiDJWv13NAImhS
        bIxJ9UULWpu1hSziwWZUwxYYo+0V48VeeKDMpST92toW3k0xzkBkVx5x6erOoXCeug8i8CqybVvIBDu6
        d1P/4zdtbzRB7hr8bgeeVfBf/6KIfgJ6TqkndutqdgAAAABJRU5ErkJggg==
</value>
  </data>
</root>